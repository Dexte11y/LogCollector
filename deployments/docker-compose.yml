version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - log-collector
  

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - log-collector


  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: log_collector
    ports:
      - "5432:5432"
    networks:
      - log-collector


  storage:
    build:
        context: ..   #необходимо указать путь к Dockerfile
        dockerfile: deployments/Dockerfile.storage
    depends_on:
      - postgres
    environment:
      KAFKA_BROKER: kafka:9092
    command: ["sh", "-c", "sleep 10 && go run cmd/storage/main.go"]
    networks:
      - log-collector


  consumer:
    build:
        context: ..   #необходимо указать путь к Dockerfile
        dockerfile: deployments/Dockerfile.consumer
    environment:
      KAFKA_BROKER: kafka:9092
    command: ["sh", "-c", "sleep 10 && go run cmd/consumer/main.go"]
    networks:
      - log-collector


  producer:
    build:
      context: ../../logproducer  #необходимо указать путь к исполняемому файлу producer в другом микросервисе 
    environment:
      KAFKA_BROKER: kafka:9092
    command: ["sh", "-c", "sleep 10 && go run main.go"]
    networks:
      - log-collector


networks:
  log-collector:
    driver: bridge
    
